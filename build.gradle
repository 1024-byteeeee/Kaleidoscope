plugins {
	id("maven-publish")
	id("com.github.hierynomus.license").version("${hierynomus_license_version}").apply(false)
	id("fabric-loom").version("${fabric_loom_version}").apply(false)
	id("com.replaymod.preprocess").version("${preprocess_version}")
}

preprocess {
	preprocess.strictExtraMappings.set(false)

	def mc116 = createNode('1.16.5', 1_16_05, 'yarn')
	def mc117 = createNode('1.17.1', 1_17_01, 'yarn')
	def mc118 = createNode('1.18.2', 1_18_02, 'yarn')
	def mc119 = createNode('1.19.4', 1_19_04, 'yarn')
	def mc1206 = createNode('1.20.6', 1_20_06, 'yarn')
	def mc1214 = createNode('1.21.4', 1_21_04, 'yarn')

	mc116.link(mc117, file('versions/mapping-1.16-1.17.txt'))
	mc117.link(mc118, file('versions/mapping-1.17-1.18.txt'))
	mc118.link(mc119, file('versions/mapping-1.18-1.19.txt'))
	mc119.link(mc1206, file('versions/mapping-1.19-1.20.6.txt'))
	mc1206.link(mc1214, file('versions/mapping-1.20.6-1.21.4.txt'))
}

tasks.register('buildAndGather') {
	subprojects {
		dependsOn project.name + ':build'
	}
	doFirst {
		println 'Gathering builds'
		delete fileTree(project.projectDir.toPath().resolve('build/libs')) {
			include '*'
		}
		copy {
			subprojects {
				def libDir = project.projectDir.toPath().resolve('build/libs')
				from(libDir) {
					include '*.jar'
					exclude '*-dev.jar', '*-sources.jar'
				}
				into 'build/libs/'
				duplicatesStrategy DuplicatesStrategy.INCLUDE
			}
		}
	}
}
